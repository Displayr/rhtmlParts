{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Footer.js","src/Subtitle.js","src/Title.js","src/index.js","src/labelUtils.js"],"names":["f","exports","module","define","amd","window","global","self","this","rhtmlParts","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","splitIntoLines","REALLY_LARGE_SCREEN_WIDTH_CAUSING_NO_WRAPPING","Footer","_ref","_ref$footerText","footerText","undefined","_ref$footerFontColor","footerFontColor","_ref$footerFontSize","footerFontSize","_ref$footerFontFamily","footerFontFamily","_ref$containerHeight","containerHeight","_ref$topPadding","topPadding","_ref$bottomPadding","bottomPadding","_ref$innerPadding","innerPadding","_classCallCheck","text","font","color","size","parseFloat","family","padding","top","bottom","inner","height","x","y","getHeight","maxWidth","setX","setY","setMaxWidth","setContainerHeight","drawWith","plotId","svg","_this","selectAll","remove","lines","forEach","lineIndex","append","attr","style","Subtitle","_ref$subtitleText","subtitleText","_ref$subtitleFontColo","subtitleFontColor","_ref$subtitleFontSize","subtitleFontSize","_ref$subtitleFontFami","subtitleFontFamily","_ref$yOffset","yOffset","Title","_ref$text","_ref$fontColor","fontColor","_ref$fontSize","fontSize","_ref$fontFamily","fontFamily","getLabelDimensionsUsingDivApproximation","inputString","arguments","uniqueId","idSeed","el","document","createElement","domString","innerHTML","body","appendChild","firstChild","testElement","getElementById","_testElement$getBound","getBoundingClientRect","width","tokens","replace","split","map","token","trim","filter","currentLine","shift","push","join","unshift","pop"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const { splitIntoLines } = require('./labelUtils')\nconst REALLY_LARGE_SCREEN_WIDTH_CAUSING_NO_WRAPPING = 15000\n\nclass Footer {\n  constructor ({\n    footerText = '',\n    footerFontColor = '#444444',\n    footerFontSize = 8,\n    footerFontFamily = 'arial',\n    containerHeight = 0,\n    topPadding = 10,\n    bottomPadding = 10,\n    innerPadding = 2\n  }) {\n    this.text = footerText\n    this.font = {\n      color: footerFontColor,\n      size: parseFloat(footerFontSize),\n      family: footerFontFamily\n    }\n    this.padding = {\n      top: parseFloat(topPadding),\n      bottom: parseFloat(bottomPadding),\n      inner: parseFloat(innerPadding)\n    }\n\n    this.height = null\n    this.x = 0\n    this.y = containerHeight - this.getHeight()\n    this.maxWidth = REALLY_LARGE_SCREEN_WIDTH_CAUSING_NO_WRAPPING\n  }\n  setX (x) {\n    this.x = parseFloat(x)\n  }\n\n  setY (y) {\n    this.y = parseFloat(y)\n  }\n\n  setMaxWidth (maxWidth) {\n    this.maxWidth = parseFloat(maxWidth)\n  }\n\n  getHeight () {\n    return this.height\n  }\n\n  setContainerHeight (containerHeight) {\n    this.containerHeight = containerHeight\n  }\n\n  drawWith (plotId, svg) {\n    svg.selectAll(`.plt-${plotId}-footer`).remove()\n\n    if (this.text !== '') {\n      let lines = splitIntoLines(this.text, this.maxWidth, this.font.size, this.font.family)\n      this.height =\n        this.padding.top +\n        this.font.size * lines.length + this.padding.inner * (lines.length - 1) +\n        this.padding.bottom\n\n      this.y = this.containerHeight -\n        this.padding.bottom -\n        (this.font.size * lines.length + this.padding.inner * (lines.length - 1))\n\n      lines.forEach((text, lineIndex) => {\n        svg.append('text')\n          .attr('class', `plt-${plotId}-footer`)\n          .attr('x', this.x)\n          .attr('y', this.y + (this.font.size + this.padding.inner) * lineIndex)\n          .attr('fill', this.font.color)\n          .attr('font-family', this.font.family)\n          .attr('font-size', this.font.size)\n          .attr('text-anchor', 'middle')\n          .style('dominant-baseline', 'text-before-edge')\n          .text(text)\n      })\n    } else {\n      this.height = 0\n    }\n  }\n}\n\nmodule.exports = Footer\n","const { splitIntoLines } = require('./labelUtils')\nconst REALLY_LARGE_SCREEN_WIDTH_CAUSING_NO_WRAPPING = 15000\n\nclass Subtitle {\n  constructor ({\n    subtitleText = '',\n    subtitleFontColor = '#444444',\n    subtitleFontSize = 12,\n    subtitleFontFamily = 'arial',\n    yOffset = 0,\n    bottomPadding = 10,\n    innerPadding = 2\n  }) {\n    this.text = subtitleText\n    this.font = {\n      color: subtitleFontColor,\n      size: parseFloat(subtitleFontSize),\n      family: subtitleFontFamily\n    }\n    this.padding = {\n      top: 0, // NB specified for symetry with Title code, but not user configurable\n      inner: parseFloat(innerPadding),\n      bottom: parseFloat(bottomPadding)\n    }\n\n    this.height = null\n    this.x = 0\n    this.y = parseFloat(yOffset)\n    this.maxWidth = REALLY_LARGE_SCREEN_WIDTH_CAUSING_NO_WRAPPING\n  }\n\n  setX (x) {\n    this.x = parseFloat(x)\n  }\n\n  setY (y) {\n    this.y = parseFloat(y)\n  }\n\n  setMaxWidth (maxWidth) {\n    this.maxWidth = parseFloat(maxWidth)\n  }\n\n  getHeight () {\n    return this.height\n  }\n\n  drawWith (plotId, svg) {\n    svg.selectAll(`.plt-${plotId}-subtitle`).remove()\n\n    if (this.text !== '') {\n      let lines = splitIntoLines(this.text, this.maxWidth, this.font.size, this.font.family)\n      this.height =\n        this.padding.top +\n        this.font.size * lines.length + this.padding.inner * (lines.length - 1) +\n        this.padding.bottom\n\n      lines.forEach((text, lineIndex) => {\n        svg.append('text')\n          .attr('class', `plt-${plotId}-subtitle`)\n          .attr('x', this.x)\n          .attr('y', this.y + (this.font.size + this.padding.inner) * lineIndex)\n          .attr('fill', this.font.color)\n          .attr('font-family', this.font.family)\n          .attr('font-size', this.font.size)\n          .attr('text-anchor', 'middle')\n          .attr('font-weight', 'normal')\n          .style('dominant-baseline', 'text-before-edge')\n          .text(text)\n      })\n    } else {\n      this.height = 0\n    }\n  }\n}\n\nmodule.exports = Subtitle\n","const { splitIntoLines } = require('./labelUtils')\nconst REALLY_LARGE_SCREEN_WIDTH_CAUSING_NO_WRAPPING = 15000\n\nclass Title {\n  constructor ({\n    text = '',\n    fontColor = '#333333',\n    fontSize = 16,\n    fontFamily = 'arial',\n    topPadding = 10,\n    bottomPadding = 10,\n    innerPadding = 2\n  }) {\n    this.text = text\n    this.font = {\n      color: fontColor,\n      size: parseFloat(fontSize),\n      family: fontFamily\n    }\n    this.padding = {\n      inner: parseFloat(innerPadding),\n      top: parseFloat(topPadding),\n      bottom: parseFloat(bottomPadding)\n    }\n\n    this.height = null\n    this.x = 0\n    this.y = this.padding.top\n    this.maxWidth = REALLY_LARGE_SCREEN_WIDTH_CAUSING_NO_WRAPPING\n  }\n\n  setX (x) {\n    this.x = parseFloat(x)\n  }\n\n  setY (y) {\n    this.y = parseFloat(y)\n  }\n\n  setMaxWidth (maxWidth) {\n    this.maxWidth = parseFloat(maxWidth)\n  }\n\n  getHeight () {\n    return this.height\n  }\n\n  drawWith (plotId, svg) {\n    svg.selectAll(`.plt-${plotId}-title`).remove()\n\n    if (this.text !== '') {\n      let lines = splitIntoLines(this.text, this.maxWidth, this.font.size, this.font.family)\n      this.height =\n        this.padding.top +\n        this.font.size * lines.length + this.padding.inner * (lines.length - 1) +\n        this.padding.bottom\n\n      lines.forEach((text, lineIndex) => {\n        svg.append('text')\n          .attr('class', `plt-${plotId}-title`)\n          .attr('x', this.x)\n          .attr('y', this.y + (this.font.size + this.padding.inner) * lineIndex)\n          .attr('fill', this.font.color)\n          .attr('font-family', this.font.family)\n          .attr('font-size', this.font.size)\n          .attr('text-anchor', 'middle')\n          .attr('font-weight', 'normal')\n          .style('dominant-baseline', 'text-before-edge')\n          .text(text)\n      })\n    } else {\n      this.height = 0\n    }\n  }\n}\n\nmodule.exports = Title\n","module.exports = {\n  Footer: require('./Footer'),\n  Title: require('./Title'),\n  Subtitle: require('./Subtitle')\n}\n","let idSeed = 0\nfunction _getUniqueId () {\n  return `wraptext-${++idSeed}`\n}\n\nfunction getLabelDimensionsUsingDivApproximation (inputString, fontSize = 12, fontFamily = 'sans-serif') {\n  const uniqueId = _getUniqueId()\n\n  const el = document.createElement('div')\n  const domString = `<div id=\"${uniqueId}\" style=\"display:inline-block; font-size: ${fontSize}px; font-family: ${fontFamily}\">${inputString}</div>`\n  el.innerHTML = domString\n  document.body.appendChild(el.firstChild)\n  const testElement = document.getElementById(uniqueId)\n  const { width, height } = testElement.getBoundingClientRect()\n  testElement.remove()\n  return { width, height }\n}\n\nfunction wordTokenizer (inputString) {\n  const inputString2 = inputString.replace(/<br>/g, ' <br> ')\n  return inputString2.split(' ').map(token => token.trim()).filter(token => token.length > 0)\n}\n\nfunction splitIntoLines (inputString, maxWidth, fontSize = 12, fontFamily = 'sans-serif') {\n  let tokens = wordTokenizer(inputString)\n  let currentLine = []\n  let lines = []\n  let token\n\n  while (token = tokens.shift()) { // eslint-disable-line no-cond-assign\n    if (token === '<br>') {\n      lines.push(`${currentLine.join(' ')}`)\n      currentLine = []\n      continue\n    }\n\n    currentLine.push(token)\n\n    const { width } = getLabelDimensionsUsingDivApproximation(currentLine.join(' '), fontSize, fontFamily)\n    if (width >= maxWidth && currentLine.length > 1) {\n      tokens.unshift(currentLine.pop())\n      lines.push(`${currentLine.join(' ')}`)\n      currentLine = []\n    }\n  }\n\n  if (currentLine.length > 0) {\n    lines.push(`${currentLine.join(' ')}`)\n  }\n\n  return lines\n}\n\nmodule.exports = {\n  getLabelDimensionsUsingDivApproximation,\n  splitIntoLines\n}\n"]}